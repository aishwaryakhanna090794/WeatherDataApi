name: Check DynamoDB Table

on:
  push:
    branches:
      - main  # Adjust this to your target branch

jobs:
  create-s3-bucket:
    runs-on: ubuntu-latest
    # needs: setup-dynamodb

    steps:
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Create S3 bucket
      run: |
        BUCKET_NAME="weather-data-api"
        REGION="us-east-1"

        aws s3api create-bucket \
          --bucket $BUCKET_NAME \
          --region $REGION 
        aws s3api head-bucket --bucket $BUCKET_NAME --region $REGION || true

  check-table:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Update with your desired region

    - name: Check if DynamoDB table exists
      run: |
        TABLE_NAME="WeatherData"
        PRIMARY_KEY="Id"
        TABLE_EXISTS=$(aws dynamodb list-tables --query "TableNames[?TableName=='$TABLE_NAME']" --output text)
        if [ -z "$TABLE_EXISTS" ]; then
          echo "Table does not exist. Creating table..."
          aws dynamodb create-table \
            --table-name $TABLE_NAME \
            --key-schema \
              AttributeName=$PRIMARY_KEY,KeyType=HASH \
            --attribute-definitions \
              AttributeName=$PRIMARY_KEY,AttributeType=S \
            --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
        else
          echo "Table already exists."
        fi
        
  archive-and-upload:
    runs-on: ubuntu-latest
    needs: create-s3-bucket  # Ensure this job runs after the S3 bucket is created

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create temporary directory
      run: |
        mkdir temp-repo

    - name: Copy files to temporary directory
      run: |
        rsync -av --exclude='temp-repo' ./ temp-repo/

    - name: Archive repository
      run: |
        ARCHIVE_NAME="repository-temp.tar.gz"
        tar -czf $ARCHIVE_NAME -C temp-repo .
        echo "Archive created: $ARCHIVE_NAME"
        ls -alh $ARCHIVE_NAME  # Verify the archive creation

    - name: Debug AWS S3 CP
      run: |
        BUCKET_NAME="weather-data-api"
        ARCHIVE_NAME="repository-temp.tar.gz"
        echo "Current directory contents:"
        ls -alh
        echo "Attempting to upload $ARCHIVE_NAME to s3://$BUCKET_NAME/"
        aws s3 cp $ARCHIVE_NAME s3://$BUCKET_NAME/$ARCHIVE_NAME --debug
